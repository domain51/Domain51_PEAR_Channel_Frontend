* [DONE] Add ability to find children packages
* [DONE] Add ability to find parent packages
* [DONE] Add ability to find package's maintainers
    * [DONE] Add maintainer model
    * [DONE] Add maintainer list object
* [DONE] Add handle model
    * [DONE] Tie handle model to maintainer
* [DONE] Add D_P_C_Package::registerExtension(D_P_C_PackageExtension $extension) to provide a uniform
  method for handling extensions to the basic packages (possibly add to all base models).
  Extensions will specify properties that they answer to, and model will delegate retrieving
  that information to the extension.  This will fit Davey Shafik's Crtx_PEAR_Channel_Frontend's
  "extras" into this model while still allowing further customization and extension by future
  developers.  API for Domain51_PEAR_Channel_PackageExtension:
    interface Domain51_PEAR_Channel_PackageExtension {
        /**
         * @return array
         */
        public function declaredProperties();
    }
* [DONE] Add in Domain51_PEAR_Channel_Extension_Package_CrtxExtra to handle the Crtx package_extras table.
* [DONE] Consider ability to auto discover extensions so they can just be installed without
  having to modify the code-base to register themselves.
* [DONE] Add Dependency object to handle dependencies
    * [DONE] Add Dependency::__toString() to handle displaying plain-text version of a given dependency
* [DONE] Add default "locale" to config object of enUS
* Make release capable of using locale to determine what object to use for Dependency object

Phase Two
---------
* [DONE] Add a Domain51_PEAR_Channel_Frontend::_dbFactory() that turns the raw PEAR-style DSN
  into a PDO style DSN adn creates the PDO object.
* Refactor existing Domain51_PEAR_Channel_Frontend to utilize new models
    * Implement "downloads" package
* Refactor existing Crtx_PEAR_Channel_Frontend displays to utilize new models and the
  Domain51_PEAR_Channel_Frontend MVC-style architecture.